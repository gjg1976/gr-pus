/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(TimeConfig.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(68f05c35c730297809627b057b812898)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pus/TimeConfig.h>
// pydoc.h is automatically generated in the build directory
#include <TimeConfig_pydoc.h>

void bind_TimeConfig(py::module& m)
{

    using TimeConfig    = gr::pus::TimeConfig;


    py::class_<TimeConfig, gr::block, gr::basic_block,
        std::shared_ptr<TimeConfig>>(m, "TimeConfig", D(TimeConfig))

        .def(py::init(&TimeConfig::make),
           py::arg("resolution"),
           py::arg("mode"),
           py::arg("p_field"),
           py::arg("epoch_year"),
           py::arg("epoch_month"),
           py::arg("epoch_day"),
           D(TimeConfig,make)
        )
        
        .def("getCurrentTimeStampAsVector", &TimeConfig::getCurrentTimeStampAsVector, D(TimeConfig, getCurrentTimeStampAsVector))    

        .def("getCurrentTimeUTC", &TimeConfig::getCurrentTimeUTC, D(TimeConfig, getCurrentTimeUTC))    

        .def("getCurrentTimeDefaultCUC", &TimeConfig::getCurrentTimeDefaultCUC, D(TimeConfig, getCurrentTimeDefaultCUC))            
        ;



}








