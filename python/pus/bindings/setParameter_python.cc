/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(setParameter.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(8ea60e3936847fab5cbbf7d5a58f1fff)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pus/setParameter.h>
// pydoc.h is automatically generated in the build directory
#include <setParameter_pydoc.h>
template <typename T>
void bind_setParameter_template(py::module& m, const char* classname)
{

    using setParameter    = gr::pus::setParameter<T>;


    py::class_<setParameter, gr::block, gr::basic_block,
        std::shared_ptr<setParameter>>(m, classname)

        .def(py::init(&setParameter::make),
           py::arg("parameterID")
        )
        
         .def("setParameterValue", &setParameter::setParameterValue, py::arg("value"), D(setParameter, setParameterValue))        



        ;




}


void bind_setParameter(py::module& m)
{
    bind_setParameter_template<std::uint8_t>(m, "setParameter_b");
    bind_setParameter_template<std::int16_t>(m, "setParameter_s");
    bind_setParameter_template<std::int32_t>(m, "setParameter_i");
    bind_setParameter_template<float>(m, "setParameter_f");
    bind_setParameter_template<double>(m, "setParameter_d");    
}




