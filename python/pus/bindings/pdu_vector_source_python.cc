/*
 * Copyright 2024 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pdu_vector_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f1369a4cf5a58cc9017e9d47a59a1cf8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pus/pdu_vector_source.h>
// pydoc.h is automatically generated in the build directory
#include <pdu_vector_source_pydoc.h>

template <typename T>
void bind_pdu_vector_source_template(py::module& m, const char* classname)
{

    using pdu_vector_source    = gr::pus::pdu_vector_source<T>;


    py::class_<pdu_vector_source, gr::block, gr::basic_block,
        std::shared_ptr<pdu_vector_source>>(m, classname)

        .def(py::init(&pdu_vector_source::make),
           py::arg("data")
        )
        



        ;




}

void bind_pdu_vector_source(py::module& m)
{
    bind_pdu_vector_source_template<std::uint8_t>(m, "pdu_vector_source_b");
    bind_pdu_vector_source_template<std::int16_t>(m, "pdu_vector_source_s");
    bind_pdu_vector_source_template<std::int32_t>(m, "pdu_vector_source_i");
    bind_pdu_vector_source_template<float>(m, "pdu_vector_source_f");
    bind_pdu_vector_source_template<gr_complex>(m, "pdu_vector_source_c");
}






